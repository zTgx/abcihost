;;;----------------------------------------------------------------------------------
;;; Generated by protoc-gen-clojure.  DO NOT EDIT
;;;
;;; GRPC tendermint.abci.ABCIApplication Service Implementation
;;;----------------------------------------------------------------------------------
(ns tendermint.abci.ABCIApplication.server
  (:require [tendermint.abci :refer :all]
            [com.google.protobuf :as com.google.protobuf]
            [tendermint.types :as tendermint.types]
            [tendermint.crypto :as tendermint.crypto]))

;-----------------------------------------------------------------------------
; GRPC ABCIApplication
;-----------------------------------------------------------------------------
(defprotocol Service
  (CheckTx [this param])
  (ListSnapshots [this param])
  (EndBlock [this param])
  (Info [this param])
  (LoadSnapshotChunk [this param])
  (Query [this param])
  (Commit [this param])
  (DeliverTx [this param])
  (InitChain [this param])
  (Flush [this param])
  (OfferSnapshot [this param])
  (ApplySnapshotChunk [this param])
  (BeginBlock [this param])
  (Echo [this param]))

(defn- CheckTx-dispatch
  [ctx request]
  (CheckTx ctx request))
(defn- ListSnapshots-dispatch
  [ctx request]
  (ListSnapshots ctx request))
(defn- EndBlock-dispatch
  [ctx request]
  (EndBlock ctx request))
(defn- Info-dispatch
  [ctx request]
  (Info ctx request))
(defn- LoadSnapshotChunk-dispatch
  [ctx request]
  (LoadSnapshotChunk ctx request))
(defn- Query-dispatch
  [ctx request]
  (Query ctx request))
(defn- Commit-dispatch
  [ctx request]
  (Commit ctx request))
(defn- DeliverTx-dispatch
  [ctx request]
  (DeliverTx ctx request))
(defn- InitChain-dispatch
  [ctx request]
  (InitChain ctx request))
(defn- Flush-dispatch
  [ctx request]
  (Flush ctx request))
(defn- OfferSnapshot-dispatch
  [ctx request]
  (OfferSnapshot ctx request))
(defn- ApplySnapshotChunk-dispatch
  [ctx request]
  (ApplySnapshotChunk ctx request))
(defn- BeginBlock-dispatch
  [ctx request]
  (BeginBlock ctx request))
(defn- Echo-dispatch
  [ctx request]
  (Echo ctx request))

(def ^:const rpc-metadata
  [{:pkg "tendermint.abci" :service "ABCIApplication" :method "CheckTx" :method-fn CheckTx-dispatch :server-streaming false :client-streaming false :input pb->RequestCheckTx :output new-ResponseCheckTx}
   {:pkg "tendermint.abci" :service "ABCIApplication" :method "ListSnapshots" :method-fn ListSnapshots-dispatch :server-streaming false :client-streaming false :input pb->RequestListSnapshots :output new-ResponseListSnapshots}
   {:pkg "tendermint.abci" :service "ABCIApplication" :method "EndBlock" :method-fn EndBlock-dispatch :server-streaming false :client-streaming false :input pb->RequestEndBlock :output new-ResponseEndBlock}
   {:pkg "tendermint.abci" :service "ABCIApplication" :method "Info" :method-fn Info-dispatch :server-streaming false :client-streaming false :input pb->RequestInfo :output new-ResponseInfo}
   {:pkg "tendermint.abci" :service "ABCIApplication" :method "LoadSnapshotChunk" :method-fn LoadSnapshotChunk-dispatch :server-streaming false :client-streaming false :input pb->RequestLoadSnapshotChunk :output new-ResponseLoadSnapshotChunk}
   {:pkg "tendermint.abci" :service "ABCIApplication" :method "Query" :method-fn Query-dispatch :server-streaming false :client-streaming false :input pb->RequestQuery :output new-ResponseQuery}
   {:pkg "tendermint.abci" :service "ABCIApplication" :method "Commit" :method-fn Commit-dispatch :server-streaming false :client-streaming false :input pb->RequestCommit :output new-ResponseCommit}
   {:pkg "tendermint.abci" :service "ABCIApplication" :method "DeliverTx" :method-fn DeliverTx-dispatch :server-streaming false :client-streaming false :input pb->RequestDeliverTx :output new-ResponseDeliverTx}
   {:pkg "tendermint.abci" :service "ABCIApplication" :method "InitChain" :method-fn InitChain-dispatch :server-streaming false :client-streaming false :input pb->RequestInitChain :output new-ResponseInitChain}
   {:pkg "tendermint.abci" :service "ABCIApplication" :method "Flush" :method-fn Flush-dispatch :server-streaming false :client-streaming false :input pb->RequestFlush :output new-ResponseFlush}
   {:pkg "tendermint.abci" :service "ABCIApplication" :method "OfferSnapshot" :method-fn OfferSnapshot-dispatch :server-streaming false :client-streaming false :input pb->RequestOfferSnapshot :output new-ResponseOfferSnapshot}
   {:pkg "tendermint.abci" :service "ABCIApplication" :method "ApplySnapshotChunk" :method-fn ApplySnapshotChunk-dispatch :server-streaming false :client-streaming false :input pb->RequestApplySnapshotChunk :output new-ResponseApplySnapshotChunk}
   {:pkg "tendermint.abci" :service "ABCIApplication" :method "BeginBlock" :method-fn BeginBlock-dispatch :server-streaming false :client-streaming false :input pb->RequestBeginBlock :output new-ResponseBeginBlock}
   {:pkg "tendermint.abci" :service "ABCIApplication" :method "Echo" :method-fn Echo-dispatch :server-streaming false :client-streaming false :input pb->RequestEcho :output new-ResponseEcho}])
